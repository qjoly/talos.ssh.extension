name: Build a specific version of Talos

on:
  workflow_dispatch:
    inputs:
      talos_version:
        description: "Version of Talos"
        required: true
      app_version:
        description: "Version of the application (ghcr.io/qjoly/talos.ssh.extension/app)"
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/qjoly/talos.ssh.extension/app
          tags: |
            type=ref,event=tag
            type=raw,value=${{ github.event.inputs.app_version }}
            type=raw,value=latest,enable=true

      - name: replace VERSION in ext manifest
        run: sed -i "s/VERSION/${{ github.event.inputs.app_version }}/g" ssh/manifest.yaml

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ssh
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Create Installer
        env:
          IMAGE_EXT: ghcr.io/qjoly/talos.ssh.extension/app
          TALOS_VERSION: ${{ github.event.inputs.talos_version }}
          ARCH: amd64
          PROFILE: installer
        run: |
          docker run --rm -t -v /dev:/dev --privileged -e GITHUB_TOKEN=${{ secrets.GHCR_PAT }} -v "$PWD/_out:/out" \
            "ghcr.io/siderolabs/imager:${TALOS_VERSION}" --arch "${ARCH}" \
            --system-extension-image ${IMAGE_EXT}:${{ github.event.inputs.app_version }} "${PROFILE}"
          docker load -i ./_out/installer-${ARCH}.tar 
          docker tag ghcr.io/siderolabs/installer:${TALOS_VERSION} ghcr.io/qjoly/talos.ssh.extension/installer:${TALOS_VERSION}-${{ github.event.inputs.app_version }}
          docker push ghcr.io/qjoly/talos.ssh.extension/installer:${TALOS_VERSION}-${{ github.event.inputs.app_version }}

      - name: Create ISO
        env:
          IMAGE_EXT: ghcr.io/qjoly/talos.ssh.extension/app
          TALOS_VERSION: ${{ github.event.inputs.talos_version }}
          ARCH: amd64
          PROFILE: iso
        run: |
          docker run --rm -t -v /dev:/dev --privileged -e GITHUB_TOKEN=${{ secrets.GHCR_PAT }} -v "$PWD/_out:/out" \
            "ghcr.io/siderolabs/imager:${TALOS_VERSION}" --arch "${ARCH}" \
            --system-extension-image ${IMAGE_EXT} "${PROFILE}"

      - name: Upload a Build Artifact
        env:
          IMAGE_EXT: ghcr.io/qjoly/talos.ssh.extension/app
          TALOS_VERSION: ${{ github.event.inputs.talos_version }}
          ARCH: amd64
          PROFILE: iso
        uses: actions/upload-artifact@v4.6.1
        with:
          name: "${{ env.TALOS_VERSION }}-${{ env.ARCH }}.iso"
          path: "_out/metal-${{ env.ARCH }}.iso"
